name: Integration
on:
  pull_request:
    types: [locked] # All integration tests are run every time the PR is locked

permissions:
  id-token: write

jobs:
  aws-deploy-integration-tests:
    name: AWS Deployment Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Rush Install
        run: node common/scripts/install-run-rush.js install

      - name: Rush Build
        run: node common/scripts/install-run-rush.js build

      - name: Pack local dependencies for integration tests
        run: node common/scripts/install-run-rush.js pack-integration-deps

      - name: Deploy to AWS
        run: cd packages/framework-integration-tests && node ../../common/scripts/install-run-rushx.js integration/aws-deploy -v
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.BOT_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BOT_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

  aws-func-integration-tests:
    name: AWS Functionality Integration Tests
    needs:
      - aws-deploy-integration-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Rush Install
        run: node common/scripts/install-run-rush.js install

      - name: Rush Build
        run: node common/scripts/install-run-rush.js build

      - name: Pack local dependencies for integration tests
        run: node common/scripts/install-run-rush.js pack-integration-deps

      - name: AWS Functionality
        run: cd packages/framework-integration-tests && node ../../common/scripts/install-run-rushx.js integration/aws-func -v
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.BOT_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BOT_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

  aws-end-to-end-tests:
    name: AWS end-to-end Tests
    needs:
      - aws-func-integration-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Rush Install
        run: node common/scripts/install-run-rush.js install

      - name: Rush Build
        run: node common/scripts/install-run-rush.js build

      - name: Pack local dependencies for integration tests
        run: node common/scripts/install-run-rush.js pack-integration-deps

      - name: AWS end to end
        run: cd packages/framework-integration-tests && node ../../common/scripts/install-run-rushx.js integration/aws-end-to-end -v
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.BOT_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BOT_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

  aws-load-tests:
    name: AWS load tests
    needs:
      - aws-end-to-end-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Rush Install
        run: node common/scripts/install-run-rush.js install

      - name: Rush Build
        run: node common/scripts/install-run-rush.js build

      - name: Pack local dependencies for integration tests
        run: node common/scripts/install-run-rush.js pack-integration-deps

      - name: AWS load tests
        run: cd packages/framework-integration-tests && node ../../common/scripts/install-run-rushx.js integration/aws-load -v
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.BOT_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BOT_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

  aws-nuke-integration-tests:
    name: AWS Nuke Integration Tests
    if: always() && needs.aws-deploy-integration-tests.result == 'success'
    continue-on-error: true
    needs:
      - aws-load-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Rush Install
        run: node common/scripts/install-run-rush.js install

      - name: Rush Build
        run: node common/scripts/install-run-rush.js build

      - name: Pack local dependencies for integration tests
        run: node common/scripts/install-run-rush.js pack-integration-deps

      - name: AWS nuke
        run: cd packages/framework-integration-tests && node ../../common/scripts/install-run-rushx.js integration/aws-nuke -v
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.BOT_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BOT_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

  cli-integration-tests:
    name: CLI Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Rush Install
        run: node common/scripts/install-run-rush.js install

      - name: Rush Build
        run: node common/scripts/install-run-rush.js build

      - name: Pack local dependencies for integration tests
        run: node common/scripts/install-run-rush.js pack-integration-deps

      - name: CLI Tests
        run: cd packages/framework-integration-tests && node ../../common/scripts/install-run-rushx.js integration/cli -v

  local-integration-tests:
    name: Local Environment Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Rush Install
        run: node common/scripts/install-run-rush.js install

      - name: Rush Build
        run: node common/scripts/install-run-rush.js build

      - name: Pack local dependencies for integration tests
        run: node common/scripts/install-run-rush.js pack-integration-deps

      - name: Local Integration Tests
        run: cd packages/framework-integration-tests && node ../../common/scripts/install-run-rushx.js integration/local -v

  azure-deploy-integration-tests:
    name: Azure Deployment Integration Test
    runs-on: ubuntu-latest
    steps:
      - name: 'Az CLI login'
        uses: azure/login@v1.4.0
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Rush Install
        run: node common/scripts/install-run-rush.js install

      - name: Rush Build
        run: node common/scripts/install-run-rush.js build

      - name: Pack local dependencies for integration tests
        run: node common/scripts/install-run-rush.js pack-integration-deps

      - name: Deploy to Azure
        run: cd packages/framework-integration-tests && node ../../common/scripts/install-run-rushx.js integration/azure-deploy -v
        env:
          AZURE_APP_ID: ${{ secrets.AZURE_CLIENTID }}
          AZURE_SECRET: ${{ secrets.AZURE_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANTID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          REGION: Central US
          publisherEmail: noreply@booster.cloud
          publisherName: Booster App
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENTID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANTID }}

  azure-end-to-end-integration-tests:
    name: Azure End to End Integration Test
    needs:
      - azure-deploy-integration-tests
    runs-on: ubuntu-latest
    steps:
      - name: 'Az CLI login'
        uses: azure/login@v1.4.0
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Rush Install
        run: node common/scripts/install-run-rush.js install

      - name: Rush Build
        run: node common/scripts/install-run-rush.js build

      - name: Pack local dependencies for integration tests
        run: node common/scripts/install-run-rush.js pack-integration-deps

      - name: Azure end to end
        run: cd packages/framework-integration-tests && node ../../common/scripts/install-run-rushx.js integration/azure-end-to-end -v
        env:
          AZURE_APP_ID: ${{ secrets.AZURE_CLIENTID }}
          AZURE_SECRET: ${{ secrets.AZURE_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANTID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          REGION: Central US
          publisherEmail: noreply@booster.cloud
          publisherName: Booster App
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENTID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANTID }}

  azure-func-integration-tests:
    name: Azure Func Integration Test
    needs:
      - azure-end-to-end-integration-tests
    runs-on: ubuntu-latest
    steps:
      - name: 'Az CLI login'
        uses: azure/login@v1.4.0
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Rush Install
        run: node common/scripts/install-run-rush.js install

      - name: Rush Build
        run: node common/scripts/install-run-rush.js build

      - name: Pack local dependencies for integration tests
        run: node common/scripts/install-run-rush.js pack-integration-deps

      - name: Azure func
        run: cd packages/framework-integration-tests && node ../../common/scripts/install-run-rushx.js integration/azure-func -v
        env:
          AZURE_APP_ID: ${{ secrets.AZURE_CLIENTID }}
          AZURE_SECRET: ${{ secrets.AZURE_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANTID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          REGION: Central US
          publisherEmail: noreply@booster.cloud
          publisherName: Booster App
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENTID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANTID }}

  azure-nuke-integration-tests:
    name: Azure Nuke Integration Test
    if: always() && needs.azure-deploy-integration-tests.result == 'success'
    continue-on-error: true
    needs:
      - azure-func-integration-tests
    runs-on: ubuntu-latest
    steps:
      - name: 'Az CLI login'
        uses: azure/login@v1.4.0
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Rush Install
        run: node common/scripts/install-run-rush.js install

      - name: Rush Build
        run: node common/scripts/install-run-rush.js build

      - name: Pack local dependencies for integration tests
        run: node common/scripts/install-run-rush.js pack-integration-deps

      - name: Azure nuke
        run: cd packages/framework-integration-tests && node ../../common/scripts/install-run-rushx.js integration/azure-nuke -v
        env:
          AZURE_APP_ID: ${{ secrets.AZURE_CLIENTID }}
          AZURE_SECRET: ${{ secrets.AZURE_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANTID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          REGION: Central US
          publisherEmail: noreply@booster.cloud
          publisherName: Booster App
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENTID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANTID }}

  # Kubernetes tests started failing on June 2021. We should fix them if adding more kubernetes features.
  # issue: https://github.com/boostercloud/booster/issues/885
  #kubernetes-integration-tests:
  #  name: Kubernetes integration tests
  #  runs-on: ubuntu-latest
  #  env:
  #    KUBECONFIG: '/home/runner/.kube/config'
  #  steps:
  #    - uses: actions/checkout@v3
  #    - uses: manusa/actions-setup-minikube@v2.3.1
  #      with:
  #        minikube version: 'v1.18.1'
  #        kubernetes version: 'v1.19.7'
  #        driver: 'docker'
  #    - uses: actions/setup-node@v3
  #      with:
  #        node-version: 16.x
  #    - run: sudo snap install helm --classic
  #    - run: kubectl create ns booster-my-store-kubernetes
  #    - run: kubectl config set-context --current --namespace=booster-my-store-kubernetes
  #    - run: minikube start --namespace=booster-my-store-kubernetes
  #    - run: npx lerna bootstrap
  #    - run: npx lerna run compile
  #    - run: npx lerna run integration/k8s-deploy --stream
  #    - run: npx lerna run integration/k8s-nuke --stream
